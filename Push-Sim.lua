local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\253\102","\59\211\72\111\156\176"),function(v42)if (v9(v42,2)==79) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==1) then return v123;end if (v122==0) then v123=v13(v102,v30);v30=nil;v122=1;end end else return v102;end break;end end end end);local function v31(v43,v44,v45)if v45 then local v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%(2 -1)) ;else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33()local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34()local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * (48013535 -31236319)) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35()local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==0) then v54=v34();v55=v34();v53=1;end if (v53==1) then v56=1;v57=(v31(v55,1,38 -18 ) * ((4 -2)^32)) + v54 ;v53=2;end if (v53==2) then v58=v31(v55,21,31);v59=((v31(v55,32)==(620 -(555 + 64))) and  -1) or 1 ;v53=3;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * (931 -(857 + 74)) ;else v58=569 -(367 + 201) ;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end end end local function v36(v60)local v61=0;local v62;local v63;while true do if (v61==3) then return v14(v63);end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end if (2==v61) then v63={};for v108=1, #v62 do v63[v108]=v10(v9(v11(v62,v108,v108)));end v61=3;end if (0==v61) then v62=nil;if  not v60 then local v115=0;while true do if (v115==0) then v60=v34();if (v60==0) then return "";end break;end end end v61=1;end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=0;local v79;local v80;while true do if (v78==0) then v79=v32();v80=nil;v78=1;end if (v78==1) then if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v69[v77]=v80;break;end end end v67[3]=v32();for v81=1,v34() do local v82=0;local v83;while true do if (v82==0) then v83=v32();if (v31(v83,1,1)==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==3) then if (v31(v120,1640 -(1523 + 114) ,3)==1) then v121[4]=v69[v121[4]];end v64[v81]=v121;break;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then v121[3]=v33();v121[1 + 3 ]=v33();elseif (v119==(878 -(282 + 595))) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then local v135=0;while true do if (v135==0) then v121[3]=v34() -(2^16) ;v121[4]=v33();break;end end end v118=2;end if (2==v118) then if (v31(v120,1,1)==1) then v121[2]=v69[v121[2]];end if (v31(v120,2,2)==1) then v121[3]=v69[v121[3]];end v118=3;end if (v118==0) then v119=v31(v83,2,3);v120=v31(v83,2 + 2 ,6);v118=1;end end end break;end end end for v84=1,v34() do v65[v84-1 ]=v39();end return v67;end local function v40(v71,v72,v73)local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...)local v86=v74;local v87=v75;local v88=v76;local v89=v38;local v90=1 + 0 ;local v91= -(1 -0);local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v106=0,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + (1066 -(68 + 997)) ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v107=0;while true do if (v107==0) then v98=v86[v90];v99=v98[1];v107=1;end if (v107==1) then if (v99<=42) then if (v99<=(1290 -(226 + 1044))) then if (v99<=9) then if (v99<=4) then if (v99<=1) then if (v99==0) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else local v137=0;local v138;local v139;local v140;local v141;while true do if (0==v137) then v138=v98[2];v139,v140=v89(v96[v138](v96[v138 + 1 ]));v137=1;end if (v137==2) then for v329=v138,v91 do local v330=0;while true do if (v330==0) then v141=v141 + 1 ;v96[v329]=v139[v141];break;end end end break;end if (v137==1) then v91=(v140 + v138) -1 ;v141=0;v137=2;end end end elseif (v99<=2) then local v142=0;local v143;while true do if (0==v142) then v143=v98[2];v96[v143](v96[v143 + (4 -3) ]);break;end end elseif (v99>(120 -(32 + 85))) then v96[v98[2]][v98[3]]=v96[v98[4]];else local v228=0;local v229;while true do if (v228==0) then v229=v98[2];v96[v229](v96[v229 + 1 + 0 ]);break;end end end elseif (v99<=6) then if (v99>(2 + 3)) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[960 -(892 + 65) ];end else local v144=0;local v145;while true do if (v144==0) then v145=v98[2];v96[v145]=v96[v145](v96[v145 + (2 -1) ]);break;end end end elseif (v99<=7) then local v146=0;local v147;local v148;local v149;while true do if (v146==1) then v149=v96[v147] + v148 ;v96[v147]=v149;v146=2;end if (v146==2) then if (v148>0) then if (v149<=v96[v147 + 1 ]) then local v392=0;while true do if (v392==0) then v90=v98[3];v96[v147 + 3 ]=v149;break;end end end elseif (v149>=v96[v147 + 1 ]) then local v393=0;while true do if (v393==0) then v90=v98[3];v96[v147 + 3 ]=v149;break;end end end break;end if (v146==0) then v147=v98[2];v148=v96[v147 + 2 ];v146=1;end end elseif (v99>(14 -6)) then local v231=0;local v232;local v233;local v234;local v235;while true do if (1==v231) then v91=(v234 + v232) -1 ;v235=0;v231=2;end if (v231==0) then v232=v98[3 -1 ];v233,v234=v89(v96[v232](v21(v96,v232 + 1 ,v98[3])));v231=1;end if (2==v231) then for v369=v232,v91 do v235=v235 + 1 ;v96[v369]=v233[v235];end break;end end else do return;end end elseif (v99<=(364 -(87 + 263))) then if (v99<=11) then if (v99==10) then local v150=0;local v151;local v152;while true do if (0==v150) then v151=v98[2];v152=v96[v98[3]];v150=1;end if (v150==1) then v96[v151 + (181 -(67 + 113)) ]=v152;v96[v151]=v152[v98[4]];break;end end else v73[v98[3]]=v96[v98[2]];end elseif (v99<=(9 + 3)) then for v209=v98[2],v98[3] do v96[v209]=nil;end elseif (v99>13) then local v236=0;local v237;while true do if (v236==0) then v237=v98[2];v96[v237]=v96[v237](v96[v237 + 1 ]);break;end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=17) then if (v99<=15) then v96[v98[2]]=v72[v98[3]];elseif (v99>16) then local v238=v98[2];local v239,v240=v89(v96[v238](v21(v96,v238 + 1 ,v91)));v91=(v240 + v238) -1 ;local v241=0;for v315=v238,v91 do local v316=0;while true do if (v316==0) then v241=v241 + 1 ;v96[v315]=v239[v241];break;end end end else local v242=0;local v243;while true do if (v242==0) then v243=v98[2];do return v96[v243](v21(v96,v243 + 1 ,v98[3]));end break;end end end elseif (v99<=18) then v96[v98[2]]= #v96[v98[7 -4 ]];elseif (v99==19) then local v244=v98[2 + 0 ];v96[v244](v21(v96,v244 + 1 ,v98[11 -8 ]));else local v245=v98[2];do return v21(v96,v245,v91);end end elseif (v99<=(983 -(802 + 150))) then if (v99<=(67 -42)) then if (v99<=22) then if (v99==(37 -16)) then v96[v98[2]]=v98[3] + v96[v98[4]] ;else v96[v98[2]]=v40(v87[v98[3]],nil,v73);end elseif (v99<=23) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>(18 + 6)) then v96[v98[999 -(915 + 82) ]]=v72[v98[3]];else v96[v98[2]][v98[3]]=v98[4];end elseif (v99<=28) then if (v99<=26) then local v160=v87[v98[8 -5 ]];local v161;local v162={};v161=v18({},{[v7("\113\184\234\35\74\130\251","\77\46\231\131")]=function(v211,v212)local v213=v162[v212];return v213[1][v213[2]];end,[v7("\133\107\184\69\173\93\184\68\191\76","\32\218\52\214")]=function(v214,v215,v216)local v217=0;local v218;while true do if (0==v217) then v218=v162[v215];v218[1][v218[2]]=v216;break;end end end});for v219=1,v98[4] do local v220=0;local v221;while true do if (v220==1) then if (v221[1]==57) then v162[v219-1 ]={v96,v221[3]};else v162[v219-1 ]={v72,v221[3]};end v95[ #v95 + 1 ]=v162;break;end if (v220==0) then v90=v90 + 1 ;v221=v86[v90];v220=1;end end end v96[v98[2 + 0 ]]=v40(v160,v161,v73);elseif (v99==27) then local v251=0;local v252;while true do if (v251==0) then v252=v98[2];v96[v252]=v96[v252](v21(v96,v252 + 1 ,v91));break;end end else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=29) then v96[v98[2]]=v96[v98[3]]%v98[4] ;elseif (v99==30) then local v254=0;local v255;local v256;while true do if (v254==1) then v96[v255 + (1 -0) ]=v256;v96[v255]=v256[v98[4]];break;end if (v254==0) then v255=v98[2];v256=v96[v98[3]];v254=1;end end else v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99<=36) then if (v99<=33) then if (v99==32) then local v165=v98[2];v96[v165]=v96[v165](v21(v96,v165 + 1 ,v98[3]));else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=34) then local v168=v98[2];do return v21(v96,v168,v91);end elseif (v99==35) then v96[v98[2]][v98[3]]=v96[v98[4]];else do return v96[v98[2]]();end end elseif (v99<=39) then if (v99<=37) then local v169=v98[2];local v170=v96[v169];local v171=v96[v169 + (1189 -(1069 + 118)) ];if (v171>0) then if (v170>v96[v169 + 1 ]) then v90=v98[3];else v96[v169 + 3 ]=v170;end elseif (v170<v96[v169 + 1 ]) then v90=v98[3];else v96[v169 + (6 -3) ]=v170;end elseif (v99==(82 -44)) then if (v96[v98[1 + 1 ]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]={};end elseif (v99<=40) then local v172=0;local v173;local v174;while true do if (0==v172) then v173=v98[2];v174=v96[v173];v172=1;end if (1==v172) then for v341=v173 + 1 ,v91 do v15(v174,v96[v341]);end break;end end elseif (v99==41) then if (v98[3 -1 ]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v261=v98[2];local v262=v96[v261 + 2 ];local v263=v96[v261] + v262 ;v96[v261]=v263;if (v262>(0 + 0)) then if (v263<=v96[v261 + 1 ]) then local v376=0;while true do if (v376==0) then v90=v98[3];v96[v261 + 3 ]=v263;break;end end end elseif (v263>=v96[v261 + 1 ]) then local v377=0;while true do if (v377==0) then v90=v98[3];v96[v261 + 3 ]=v263;break;end end end end elseif (v99<=63) then if (v99<=52) then if (v99<=47) then if (v99<=(835 -(368 + 423))) then if (v99>43) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v96[v98[2]]~=v98[12 -8 ]) then v90=v90 + (19 -(10 + 8)) ;else v90=v98[3];end elseif (v99<=45) then local v177=v98[7 -5 ];local v178,v179=v89(v96[v177](v21(v96,v177 + 1 ,v91)));v91=(v179 + v177) -1 ;local v180=0;for v222=v177,v91 do local v223=0;while true do if (v223==0) then v180=v180 + 1 ;v96[v222]=v178[v180];break;end end end elseif (v99>46) then local v266=v98[2];v96[v266]=v96[v266](v21(v96,v266 + 1 ,v98[3]));else local v268=v98[2];v96[v268]=v96[v268]();end elseif (v99<=49) then if (v99==48) then v96[v98[2]]=v98[3];else v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99<=50) then v96[v98[2]]=v73[v98[3]];elseif (v99>51) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else v96[v98[2]]=v73[v98[3]];end elseif (v99<=(499 -(416 + 26))) then if (v99<=54) then if (v99==53) then v96[v98[2]]=v96[v98[3]][v98[4]];else do return v96[v98[2]]();end end elseif (v99<=55) then local v188=0;local v189;local v190;while true do if (v188==0) then v189=v98[2];v190=v96[v189];v188=1;end if (v188==1) then for v345=v189 + 1 ,v91 do v15(v190,v96[v345]);end break;end end elseif (v99>(178 -122)) then v96[v98[2]]=v96[v98[3]];else v90=v98[3];end elseif (v99<=60) then if (v99<=58) then local v191=v98[1 + 1 ];v96[v191]=v96[v191](v21(v96,v191 + 1 ,v91));elseif (v99==59) then v96[v98[2]]=v98[3]~=0 ;else local v277=v98[2];local v278,v279=v89(v96[v277](v96[v277 + 1 ]));v91=(v279 + v277) -1 ;local v280=0;for v321=v277,v91 do v280=v280 + 1 ;v96[v321]=v278[v280];end end elseif (v99<=61) then local v193=0;local v194;while true do if (v193==0) then v194=v98[2];v96[v194](v21(v96,v194 + 1 ,v91));break;end end elseif (v99>(109 -47)) then v90=v98[3];else local v282=0;local v283;while true do if (v282==0) then v283=v98[2];v96[v283](v21(v96,v283 + 1 ,v98[3]));break;end end end elseif (v99<=74) then if (v99<=68) then if (v99<=65) then if (v99>64) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[440 -(145 + 293) ]]=v96[v98[3]]%v98[4] ;end elseif (v99<=66) then local v196=0;local v197;while true do if (v196==0) then v197=v98[2];v96[v197]=v96[v197]();break;end end elseif (v99>67) then local v285=v98[2];do return v96[v285](v21(v96,v285 + 1 ,v98[3]));end else do return;end end elseif (v99<=(501 -(44 + 386))) then if (v99<=69) then v96[v98[2]]= #v96[v98[3]];elseif (v99==70) then v96[v98[2]]=v98[3];elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=72) then v96[v98[1488 -(998 + 488) ]]=v40(v87[v98[3]],nil,v73);elseif (v99==73) then v96[v98[2]]();else local v288=0;local v289;local v290;local v291;while true do if (v288==2) then for v378=1,v98[4] do local v379=0;local v380;while true do if (v379==1) then if (v380[1]==57) then v291[v378-1 ]={v96,v380[3]};else v291[v378-1 ]={v72,v380[3]};end v95[ #v95 + 1 ]=v291;break;end if (v379==0) then v90=v90 + 1 ;v380=v86[v90];v379=1;end end end v96[v98[2 + 0 ]]=v40(v289,v290,v73);break;end if (v288==1) then v291={};v290=v18({},{[v7("\113\40\56\166\245\181\93","\58\46\119\81\200\145\208\37")]=function(v381,v382)local v383=0;local v384;while true do if (v383==0) then v384=v291[v382];return v384[1 + 0 ][v384[2]];end end end,[v7("\20\179\62\169\190\180\56\47\137\40","\86\75\236\80\204\201\221")]=function(v385,v386,v387)local v388=v291[v386];v388[1][v388[2]]=v387;end});v288=2;end if (v288==0) then v289=v87[v98[3]];v290=nil;v288=1;end end end elseif (v99<=79) then if (v99<=(848 -(201 + 571))) then if (v99==75) then local v200=v98[2];local v201,v202=v89(v96[v200](v21(v96,v200 + 1 ,v98[3])));v91=(v202 + v200) -1 ;local v203=0;for v224=v200,v91 do local v225=0;while true do if (v225==0) then v203=v203 + 1 ;v96[v224]=v201[v203];break;end end end else v96[v98[2]]={};end elseif (v99<=(1215 -(116 + 1022))) then v96[v98[2]]=v96[v98[3]];elseif (v99>78) then if (v98[8 -6 ]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else local v292=0;local v293;local v294;local v295;while true do if (v292==1) then v295=v96[v293 + 2 ];if (v295>0) then if (v294>v96[v293 + 1 ]) then v90=v98[3];else v96[v293 + 3 ]=v294;end elseif (v294<v96[v293 + 1 ]) then v90=v98[3];else v96[v293 + 3 ]=v294;end break;end if (0==v292) then v293=v98[2];v294=v96[v293];v292=1;end end end elseif (v99<=82) then if (v99<=80) then v96[v98[2 + 0 ]][v98[3]]=v98[4];elseif (v99>81) then v73[v98[3]]=v96[v98[7 -5 ]];else for v327=v98[2],v98[3] do v96[v327]=nil;end end elseif (v99<=83) then if (v96[v98[2]]~=v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>84) then v96[v98[2]]();else local v299=0;local v300;while true do if (v299==0) then v300=v98[2];v96[v300](v21(v96,v300 + 1 ,v91));break;end end end v90=v90 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end vv17(),...);

--Made by redcoder
--Pls JOin This Server : https://discord.gg/rGWaJZmuXS
